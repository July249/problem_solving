//  소수 구하기

// 1. 2부터 n-1까지 루프를 돌면서 나누어 약수인지 아닌지 확인
// O(n) 시간복잡도
/* function is_Prime(num) {
  for (let i = 2; i < num; i += 1) {
    if (num % i === 0) {
      return false;
    }
  }
  return true;
} */

// 2. n의 제곱근보다 작거나 같은 n값까지만 나누어 약수인지 아닌지 확인
// O(sqrt(n))
/* function is_Prime(num) {
  for (let i = 2; i * i <= num; i += 1) {
    if (num % i === 0) {
      return false;
    }
  }
  return true;
} */

// 3. 에라토스테네스의 체
// 2번의 방법을 고수하면서 약수인 수들의 배수들을 미리 제거하는 방법
/* 
1부터 54까지 중 소수를 찾는 방법

[
  1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
  11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
  21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
  31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
  41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
  51, 52, 53, 54
]

- 2, 3은 무조건 소수로 설정 // 
[
  2, 3, || 4, 5, 6, 7, 8, 9, 10,
  11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
  21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
  31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
  41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
  51, 52, 53, 54
]
- 2와 3의 배수는 소수가 아님, 2와 3의 배수는 후보군에서 제거
[
  2, 3, || 5, 7,
  11, 13, 17, 19, 
  23, 25, 29, 
  31, 35, 37,   
  41, 43, 47, 49, 
  53, 
]
- 5도 소수
- 5의 배수는 소수가 아님, 5의 배수는 후보군에서 제거
[
  2, 3, 5, || 7,
  11, 13, 17, 19, 
  23, 29, 
  31, 37,   
  41, 43, 47, 49, 
  53, 
]
- 7도 소수
- 7의 배수는 소수가 아님, 7의 배수는 후보군에서 제거
[
  2, 3, 5, 7, ||
  11, 13, 17, 19, 
  23, 29, 
  31, 37,   
  41, 43, 47, 
  53, 
]
- 7의 제곱 = 49이고, 8의 제곱 = 64이므로 54의 제곱근보다 작거나 같은 값은 7!
- 따라서 7까지만 계산하면 됨
- 그러므로 54까지의 숫자 중 소수는

[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53]
*/

// O(n log log n) 시간복잡도
/* function get_primes(num) {
  const result = []; // 소수를 담기 위한 배열
  const prime = [false, false, ...Array(num - 1).fill(true)]; // 0과 1을 제외한 나머지 숫자 모두를 소수의 후보군으로 등록

  // 에리토스테네스의 체 알고리즘
  for (let i = 2; i * i <= num; i += 1) {
    if (prime[i]) {
      for (let j = 2; j * i <= num; j += 1) {
        prime[j * i] = false;
      }
    }
  }

  // 소수 출력
  for (let k = 0; k < num; k += 1) {
    if (prime[k]) {
      result.push(k);
    }
  }

  return result;
}

console.log(get_primes(8)); // [ 2, 3, 5, 7 ] */
